name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CURRENT_TAG_REF: ${{ github.SHA }}
  DOCKER_REGISTRY: ${{ secrets.DOCKER_IMAGE_REGISTRY }}
  DOCKERFILE_TARGET: ${{ secrets.DOCKERFILE_TARGET }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_TOKEN: ${{ secrets.DOCKER_PASSWORD }}
  DOCKER_REPO: ${{ secrets.DOCKER_REPO }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  PRIVATE_KEY_SAVE_FOLDER: ${{ secrets.PRIVATE_KEY_SAVE_FOLDER }}
  PRIVATE_KEY_SAVE_FILE: ${{ secrets.PRIVATE_KEY_SAVE_FOLDER }}/file_key.pem
  SERVER_HOST: ${{ secrets.SERVER_HOST }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Login into the docker
      run: echo ${{ env.DOCKER_TOKEN }} | docker login ${{ env.DOCKER_REGISTRY }} -u ${{ env.DOCKER_USERNAME }} --password-stdin
    - name: Pull the latest image
      run: docker pull ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_REPO }}:latest | true
    - name: set some environment varibale
      run: export CURRENT_IMAGE_BUILD_REPO=${{ env.CURRENT_TAG_REF }} && echo $CURRENT_IMAGE_BUILD_REPO
    - name: Build the image
      run: docker build --pull --cache-from ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_REPO }}:latest --target ${{ env.DOCKERFILE_TARGET }} --tag ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_REPO }}:${{ env.CURRENT_TAG_REF }} .
    - name: push the latest images
      run: docker push ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_REPO }}:${{ env.CURRENT_TAG_REF }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: checkout to the home.
      run: cd ~/
    - name: make folder
      run: mkdir -p ${{ env.PRIVATE_KEY_SAVE_FOLDER }}
    - name: make file
      run: touch ${{ env.PRIVATE_KEY_SAVE_FILE }}
    - name: save key into the file
      run: echo "${{ env.SSH_PRIVATE_KEY }}" >> ${{ env.PRIVATE_KEY_SAVE_FILE }}
    - name: give it the absolute permissions
      run: chmod 400 ${{ env.PRIVATE_KEY_SAVE_FILE }}
    - name: Login in to the server and make file.
      run: ssh -o StrictHostKeyChecking=no -i ${{ env.PRIVATE_KEY_SAVE_FILE }} -v ubuntu@${{ env.SERVER_HOST }} "
          echo ${{ env.DOCKER_TOKEN }} | docker login ${{ env.DOCKER_REGISTRY }} -u ${{ env.DOCKER_USERNAME }} --password-stdin;
          sleep 5s;
          docker stop ${{ env.DOCKER_REPO }} || true;
          sleep 5s;
          docker container prune -f;
          docker run --restart unless-stopped -d -p 8654:80 --name ${{ env.DOCKER_REPO }}  ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_REPO }}:${{ env.CURRENT_TAG_REF }};
          sleep 15s;
          docker logs ${{ env.DOCKER_REPO }};
        "


